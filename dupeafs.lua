local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==4) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v43={};local v44={};local v45={};local v46={v43,v44,nil,v45};local v47=v35();local v48={};for v81=1,v47 do local v82=0;local v83;local v84;while true do if (v82==1) then if (v83==1) then v84=v33()~=0 ;elseif (v83==2) then v84=v36();elseif (v83==3) then v84=v37();end v48[v81]=v84;break;end if (v82==0) then v83=v33();v84=nil;v82=1;end end end v46[3]=v33();for v85=1,v35() do local v86=0;local v87;while true do if (v86==0) then v87=v33();if (v32(v87,1,620 -(555 + 64) )==(859 -(814 + 45))) then local v119=v32(v87,4 -2 ,3);local v120=v32(v87,4,6);local v121={v34(),v34(),nil,nil};if (v119==0) then v121[3]=v34();v121[4]=v34();elseif (v119==1) then v121[934 -(857 + 74) ]=v35();elseif (v119==2) then v121[3]=v35() -(2^16) ;elseif (v119==(571 -(367 + 201))) then local v140=0;while true do if (v140==0) then v121[3]=v35() -(2^16) ;v121[4]=v34();break;end end end if (v32(v120,1 + 0 ,928 -(214 + 713) )==1) then v121[2]=v48[v121[1 + 1 ]];end if (v32(v120,2,887 -(261 + 624) )==1) then v121[3]=v48[v121[4 -1 ]];end if (v32(v120,1 + 2 ,1083 -(1020 + 60) )==1) then v121[4]=v48[v121[4]];end v43[v85]=v121;end break;end end end for v88=1 + 0 ,v35() do v44[v88-1 ]=v40();end return v46;end v29=5;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\164\185","\155\138\151\166\130\66\135\60"),function(v50)if (v9(v50,2)==(1217 -(116 + 1022))) then local v92=0;while true do if (v92==0) then v31=v8(v11(v50,1,1));return "";end end else local v93=0;local v94;while true do if (v93==0) then v94=v10(v8(v50,16));if v31 then local v123=v13(v94,v31);v31=nil;return v123;else return v94;end break;end end end end);v32=nil;v29=1;end if (v29==2) then function v34()local v51=0;local v52;local v53;while true do if (v51==0) then v52,v53=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v51=1;end if (1==v51) then return (v53 * 256) + v52 ;end end end v35=nil;function v35()local v54=0;local v55;local v56;local v57;local v58;while true do if (v54==1) then return (v58 * 16777216) + (v57 * 65536) + (v56 * (732 -476)) + v55 ;end if (v54==0) then v55,v56,v57,v58=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v54=1;end end end v36=nil;v29=3;end if (v29==3) then function v36()local v59=0;local v60;local v61;local v62;local v63;local v64;local v65;while true do if (v59==3) then if (v64==0) then if (v63==0) then return v65 * 0 ;else v64=1;v62=0;end elseif (v64==2047) then return ((v63==0) and (v65 * (1/0))) or (v65 * NaN) ;end return v16(v65,v64-(1974 -951) ) * (v62 + (v63/(2^(189 -137)))) ;end if (0==v59) then v60=v35();v61=v35();v59=1;end if (v59==2) then v64=v32(v61,21,31);v65=((v32(v61,32)==1) and  -1) or 1 ;v59=3;end if (v59==1) then v62=1;v63=(v32(v61,1,20) * (2^32)) + v60 ;v59=2;end end end v37=nil;function v37(v66)local v67;if  not v66 then local v95=0;while true do if (v95==0) then v66=v35();if (v66==0) then return "";end break;end end end v67=v11(v27,v30,(v30 + v66) -1 );v30=v30 + v66 ;local v68={};for v90=1, #v67 do v68[v90]=v10(v9(v11(v67,v90,v90)));end return v14(v68);end v38=v35;v29=4;end if (v29==5) then v41=nil;function v41(v69,v70,v71)local v72=0;local v73;local v74;local v75;while true do if (0==v72) then v73=v69[1];v74=v69[2];v72=1;end if (v72==1) then v75=v69[3];return function(...)local v103=v73;local v104=v74;local v105=v75;local v106=v39;local v107=1;local v108= -1;local v109={};local v110={...};local v111=v20("#",...) -1 ;local v112={};local v113={};for v117=0,v111 do if (v117>=v105) then v109[v117-v105 ]=v110[v117 + 1 ];else v113[v117]=v110[v117 + 1 ];end end local v114=(v111-v105) + 1 ;local v115;local v116;while true do local v118=0;while true do if (v118==1) then if (v116<=(1467 -(630 + 793))) then if (v116<=21) then if (v116<=10) then if (v116<=4) then if (v116<=(3 -2)) then if (v116>0) then for v214=v115[2],v115[3] do v113[v214]=nil;end else local v143=v115[2];v113[v143](v21(v113,v143 + (4 -3) ,v115[3]));end elseif (v116<=2) then local v144=v115[2];v113[v144](v113[v144 + 1 + 0 ]);elseif (v116>3) then local v226=v115[6 -4 ];local v227=v113[v115[3]];v113[v226 + 1 ]=v227;v113[v226]=v227[v115[4]];else local v231=v115[1749 -(760 + 987) ];v113[v231]=v113[v231](v113[v231 + 1 ]);end elseif (v116<=7) then if (v116<=(1918 -(1789 + 124))) then local v145=0;local v146;local v147;local v148;while true do if (v145==1) then v148={};v147=v18({},{[v7("\6\15\77\127\61\53\92","\17\89\80\36")]=function(v369,v370)local v371=0;local v372;while true do if (0==v371) then v372=v148[v370];return v372[1][v372[2]];end end end,[v7("\74\69\116\203\98\115\116\202\112\98","\174\21\26\26")]=function(v373,v374,v375)local v376=0;local v377;while true do if (v376==0) then v377=v148[v374];v377[767 -(745 + 21) ][v377[2]]=v375;break;end end end});v145=2;end if (v145==2) then for v378=1,v115[881 -(282 + 595) ] do v107=v107 + 1 ;local v379=v103[v107];if (v379[1]==81) then v148[v378-1 ]={v113,v379[3]};else v148[v378-(1638 -(1523 + 114)) ]={v70,v379[3]};end v112[ #v112 + 1 ]=v148;end v113[v115[7 -5 ]]=v41(v146,v147,v71);break;end if (0==v145) then v146=v104[v115[3]];v147=nil;v145=1;end end elseif (v116==6) then do return;end else local v233=0;local v234;while true do if (0==v233) then v234=v115[2];v113[v234]=v113[v234](v21(v113,v234 + 1 ,v115[3]));break;end end end elseif (v116<=8) then local v149=0;local v150;local v151;while true do if (v149==1) then v113[v150 + 1 ]=v151;v113[v150]=v151[v115[4]];break;end if (v149==0) then v150=v115[2 -0 ];v151=v113[v115[3]];v149=1;end end elseif (v116==9) then v113[v115[2]]=v115[3];else local v237=0;local v238;local v239;local v240;local v241;while true do if (2==v237) then for v437=v238,v108 do local v438=0;while true do if (v438==0) then v241=v241 + 1 ;v113[v437]=v239[v241];break;end end end break;end if (1==v237) then v108=(v240 + v238) -(1 + 0) ;v241=1055 -(87 + 968) ;v237=2;end if (v237==0) then v238=v115[1067 -(68 + 997) ];v239,v240=v106(v113[v238](v21(v113,v238 + 1 + 0 ,v115[1273 -(226 + 1044) ])));v237=1;end end end elseif (v116<=15) then if (v116<=12) then if (v116>11) then local v152=v115[2];local v153=v113[v152];local v154=v113[v152 + 2 ];if (v154>0) then if (v153>v113[v152 + (4 -3) ]) then v107=v115[12 -9 ];else v113[v152 + 3 ]=v153;end elseif (v153<v113[v152 + 1 + 0 ]) then v107=v115[3];else v113[v152 + 3 ]=v153;end else local v155=0;local v156;while true do if (v155==0) then v156=v115[2];v113[v156]=v113[v156](v21(v113,v156 + 1 ,v108));break;end end end elseif (v116<=13) then local v157=v115[119 -(32 + 85) ];local v158,v159=v106(v113[v157](v113[v157 + 1 ]));v108=(v159 + v157) -1 ;local v160=0;for v216=v157,v108 do local v217=0;while true do if (v217==0) then v160=v160 + 1 + 0 ;v113[v216]=v158[v160];break;end end end elseif (v116==14) then local v242=0;local v243;local v244;local v245;while true do if (v242==1) then v245=957 -(892 + 65) ;for v439=v243,v115[1417 -(447 + 966) ] do local v440=0;while true do if (v440==0) then v245=v245 + 1 ;v113[v439]=v244[v245];break;end end end break;end if (v242==0) then v243=v115[2];v244={v113[v243](v21(v113,v243 + 1 ,v108))};v242=1;end end else v113[v115[2]]=v113[v115[3]]%v115[4] ;end elseif (v116<=18) then if (v116<=(37 -21)) then local v161=0;local v162;while true do if (v161==0) then v162=v115[2];do return v113[v162](v21(v113,v162 + 1 ,v115[3]));end break;end end elseif (v116>17) then v113[v115[2]]=v115[3] + v113[v115[4]] ;else local v248=0;local v249;local v250;local v251;while true do if (v248==0) then v249=v115[2];v250=v113[v249];v248=1;end if (v248==1) then v251=v113[v249 + 2 ];if (v251>0) then if (v250>v113[v249 + 1 ]) then v107=v115[3];else v113[v249 + 3 ]=v250;end elseif (v250<v113[v249 + 1 ]) then v107=v115[5 -2 ];else v113[v249 + 3 ]=v250;end break;end end end elseif (v116<=19) then local v163=0;local v164;local v165;while true do if (0==v163) then v164=v115[1819 -(1703 + 114) ];v165=v113[v164];v163=1;end if (v163==1) then for v387=v164 + 1 ,v108 do v15(v165,v113[v387]);end break;end end elseif (v116==20) then local v252=v115[703 -(376 + 325) ];local v253=v113[v252 + 2 ];local v254=v113[v252] + v253 ;v113[v252]=v254;if (v253>0) then if (v254<=v113[v252 + 1 ]) then v107=v115[3];v113[v252 + 3 ]=v254;end elseif (v254>=v113[v252 + 1 ]) then v107=v115[3];v113[v252 + 3 ]=v254;end else local v256=v115[3 -1 ];do return v21(v113,v256,v108);end end elseif (v116<=32) then if (v116<=26) then if (v116<=(373 -(87 + 263))) then if (v116==(202 -(67 + 113))) then v113[v115[2]]={};else v107=v115[3];end elseif (v116<=24) then if  not v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116==25) then v113[v115[2 -0 ]]=v115[3];else local v260=v115[2];local v261=v115[4];local v262=v260 + 2 ;local v263={v113[v260](v113[v260 + 1 ],v113[v262])};for v348=1,v261 do v113[v262 + v348 ]=v263[v348];end local v264=v263[2 -1 ];if v264 then local v388=0;while true do if (v388==0) then v113[v262]=v264;v107=v115[3];break;end end else v107=v107 + 1 ;end end elseif (v116<=29) then if (v116<=27) then local v168=0;local v169;local v170;local v171;while true do if (v168==2) then for v389=1,v115[3 + 1 ] do local v390=0;local v391;while true do if (v390==1) then if (v391[1]==(178 -97)) then v171[v389-1 ]={v113,v391[3]};else v171[v389-(15 -(9 + 5)) ]={v70,v391[3]};end v112[ #v112 + 1 ]=v171;break;end if (v390==0) then v107=v107 + 1 ;v391=v103[v107];v390=1;end end end v113[v115[2]]=v41(v169,v170,v71);break;end if (v168==1) then v171={};v170=v18({},{[v7("\8\158\189\30\51\164\172","\112\87\193\212")]=function(v392,v393)local v394=0;local v395;while true do if (v394==0) then v395=v171[v393];return v395[1][v395[2]];end end end,[v7("\148\75\177\186\82\72\220\39\174\108","\67\203\20\223\223\37\33\178")]=function(v396,v397,v398)local v399=v171[v397];v399[1][v399[2]]=v398;end});v168=2;end if (v168==0) then v169=v104[v115[3]];v170=nil;v168=1;end end elseif (v116==28) then v113[v115[4 -2 ]]= #v113[v115[3]];else v113[v115[2]]=v71[v115[3 + 0 ]];end elseif (v116<=30) then local v172=v115[2];do return v21(v113,v172,v108);end elseif (v116==31) then v113[v115[2]][v113[v115[3]]]=v113[v115[4]];else v113[v115[2]]=v115[3]~=0 ;end elseif (v116<=38) then if (v116<=35) then if (v116<=33) then local v173=v115[11 -8 ];local v174=v113[v173];for v218=v173 + 1 ,v115[4] do v174=v174   .. v113[v218] ;end v113[v115[2]]=v174;elseif (v116==34) then if (v113[v115[954 -(802 + 150) ]]==v115[4]) then v107=v107 + 1 ;else v107=v115[3];end else local v271=0;local v272;local v273;while true do if (v271==0) then v272=v115[379 -(85 + 291) ];v273=v113[v272];v271=1;end if (v271==1) then for v445=v272 + 1 ,v115[4] do v273=v273   .. v113[v445] ;end v113[v115[2]]=v273;break;end end end elseif (v116<=36) then if (v113[v115[5 -3 ]]==v115[4]) then v107=v107 + (1266 -(243 + 1022)) ;else v107=v115[3];end elseif (v116>37) then local v275=v115[2];v113[v275](v21(v113,v275 + 1 ,v108));else v113[v115[7 -5 ]]=v113[v115[3]][v115[4]];end elseif (v116<=41) then if (v116<=(33 + 6)) then v113[v115[2]]=v113[v115[3]];elseif (v116==(1220 -(1123 + 57))) then local v278=0;local v279;while true do if (v278==0) then v279=v115[2];v113[v279]=v113[v279](v21(v113,v279 + 1 ,v115[3]));break;end end else v113[v115[3 -1 ]]=v113[v115[3]] + v115[258 -(163 + 91) ] ;end elseif (v116<=42) then v113[v115[2]]=v70[v115[3]];elseif (v116==43) then local v281=0;local v282;while true do if (v281==0) then v282=v115[2];v113[v282]=v113[v282]();break;end end else v113[v115[2 + 0 ]]= #v113[v115[3]];end elseif (v116<=67) then if (v116<=55) then if (v116<=49) then if (v116<=46) then if (v116==(1975 -(1869 + 61))) then do return v113[v115[2]]();end else local v180=v115[2];local v181=v115[4];local v182=v180 + 2 ;local v183={v113[v180](v113[v180 + 1 ],v113[v182])};for v219=1,v181 do v113[v182 + v219 ]=v183[v219];end local v184=v183[1 + 0 ];if v184 then local v284=0;while true do if (v284==0) then v113[v182]=v184;v107=v115[3];break;end end else v107=v107 + (3 -2) ;end end elseif (v116<=(1044 -(915 + 82))) then v113[v115[2]]=v71[v115[4 -1 ]];elseif (v116>48) then v113[v115[2]][v115[3]]=v115[4];else local v287=v115[2];local v288,v289=v106(v113[v287](v21(v113,v287 + 1 ,v108)));v108=(v289 + v287) -1 ;local v290=0 -0 ;for v353=v287,v108 do local v354=0;while true do if (v354==0) then v290=v290 + 1 ;v113[v353]=v288[v290];break;end end end end elseif (v116<=52) then if (v116<=50) then local v187=0;local v188;while true do if (v187==0) then v188=v115[2];v113[v188]=v113[v188](v113[v188 + 1 ]);break;end end elseif (v116>(30 + 21)) then if  not v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end else local v291=v115[2];v113[v291]=v113[v291](v21(v113,v291 + 1 ,v108));end elseif (v116<=53) then local v189=0;local v190;local v191;local v192;while true do if (1==v189) then v192=0;for v403=v190,v115[4] do local v404=0;while true do if (v404==0) then v192=v192 + 1 ;v113[v403]=v191[v192];break;end end end break;end if (v189==0) then v190=v115[2];v191={v113[v190](v21(v113,v190 + 1 ,v108))};v189=1;end end elseif (v116==(8 + 46)) then v113[v115[2 -0 ]][v113[v115[3]]]=v115[4];else for v358=v115[2],v115[3 -0 ] do v113[v358]=nil;end end elseif (v116<=61) then if (v116<=58) then if (v116<=(53 + 3)) then v113[v115[2]]=v115[3]~=(1474 -(1329 + 145)) ;elseif (v116==(1244 -(1069 + 118))) then v113[v115[2]]=v113[v115[3]]%v113[v115[4]] ;else v113[v115[2]][v113[v115[3]]]=v115[975 -(140 + 831) ];end elseif (v116<=(133 -74)) then local v194=v115[2];local v195=v113[v194];local v196=v115[3];for v222=1,v196 do v195[v222]=v113[v194 + v222 ];end elseif (v116==(1910 -(1409 + 441))) then v113[v115[2]]=v113[v115[3]]%v115[4] ;else local v299=0;local v300;while true do if (v299==0) then v300=v115[2];do return v113[v300](v21(v113,v300 + 1 ,v115[3]));end break;end end end elseif (v116<=64) then if (v116<=62) then v113[v115[3 -1 ]][v115[3]]=v113[v115[4]];elseif (v116>63) then do return v113[v115[2]]();end else local v301=0;local v302;while true do if (v301==0) then v302=v115[2];v113[v302]=v113[v302]();break;end end end elseif (v116<=65) then local v199=v115[1 + 1 ];local v200=v113[v199];for v225=v199 + (1 -0) ,v108 do v15(v200,v113[v225]);end elseif (v116>66) then v113[v115[2]]=v113[v115[721 -(15 + 703) ]][v115[2 + 2 ]];else v113[v115[440 -(262 + 176) ]]=v113[v115[3]] + v115[4] ;end elseif (v116<=78) then if (v116<=72) then if (v116<=69) then if (v116==(1789 -(345 + 1376))) then v113[v115[690 -(198 + 490) ]][v113[v115[3]]]=v113[v115[4]];else v107=v115[3 + 0 ];end elseif (v116<=(861 -(368 + 423))) then v113[v115[2]][v115[3]]=v113[v115[4]];elseif (v116>71) then local v306=0;local v307;local v308;while true do if (v306==0) then v307=v115[2];v308=v113[v307];v306=1;end if (v306==1) then for v448=v307 + 1 ,v115[3] do v15(v308,v113[v448]);end break;end end else v113[v115[2]]=v115[3] + v113[v115[4]] ;end elseif (v116<=(235 -160)) then if (v116<=73) then local v206=v115[2];v113[v206](v113[v206 + 1 ]);elseif (v116>74) then local v310=v115[2];local v311,v312=v106(v113[v310](v21(v113,v310 + (19 -(10 + 8)) ,v108)));v108=(v312 + v310) -1 ;local v313=0;for v360=v310,v108 do v313=v313 + 1 ;v113[v360]=v311[v313];end else local v314=0;local v315;local v316;local v317;while true do if (v314==0) then v315=v115[2];v316=v113[v315 + 2 ];v314=1;end if (v314==2) then if (v316>(0 -0)) then if (v317<=v113[v315 + 1 ]) then v107=v115[3];v113[v315 + 3 ]=v317;end elseif (v317>=v113[v315 + (443 -(416 + 26)) ]) then local v473=0;while true do if (v473==0) then v107=v115[3];v113[v315 + 3 ]=v317;break;end end end break;end if (v314==1) then v317=v113[v315] + v316 ;v113[v315]=v317;v314=2;end end end elseif (v116<=76) then v113[v115[2]]=v70[v115[9 -6 ]];elseif (v116>77) then if v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end else local v318=v115[2];local v319,v320=v106(v113[v318](v21(v113,v318 + 1 ,v115[3])));v108=(v320 + v318) -1 ;local v321=0;for v363=v318,v108 do local v364=0;while true do if (v364==0) then v321=v321 + 1 + 0 ;v113[v363]=v319[v321];break;end end end end elseif (v116<=84) then if (v116<=81) then if (v116<=79) then local v209=0;local v210;local v211;local v212;local v213;while true do if (v209==2) then for v406=v210,v108 do v213=v213 + 1 ;v113[v406]=v211[v213];end break;end if (v209==1) then v108=(v212 + v210) -1 ;v213=0;v209=2;end if (v209==0) then v210=v115[2];v211,v212=v106(v113[v210](v113[v210 + 1 ]));v209=1;end end elseif (v116==80) then v113[v115[3 -1 ]]=v113[v115[3]]%v113[v115[4]] ;else v113[v115[2]]=v113[v115[3]];end elseif (v116<=82) then do return;end elseif (v116>(521 -(145 + 293))) then v113[v115[432 -(44 + 386) ]][v115[3]]=v115[4];else local v327=v115[2];local v328=v113[v327];local v329=v115[3];for v366=1487 -(998 + 488) ,v329 do v328[v366]=v113[v327 + v366 ];end end elseif (v116<=87) then if (v116<=85) then if (v113[v115[8 -6 ]]==v113[v115[4]]) then v107=v107 + (2 -1) ;else v107=v115[1 + 2 ];end elseif (v116>(71 + 15)) then local v331=0;local v332;while true do if (v331==0) then v332=v115[1208 -(696 + 510) ];v113[v332](v21(v113,v332 + 1 ,v108));break;end end else v113[v115[2]]={};end elseif (v116<=88) then if (v113[v115[2]]==v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116>89) then if v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end else local v335=v115[2];v113[v335](v21(v113,v335 + (773 -(201 + 571)) ,v115[3]));end v107=v107 + 1 ;break;end if (0==v118) then v115=v103[v107];v116=v115[1];v118=1;end end end end;end end end return v41(v40(),{},v28)(...);end if (v29==1) then function v32(v76,v77,v78)if v78 then local v96=(v76/(2^(v77-1)))%(2^(((v78-1) -(v77-1)) + 1)) ;return v96-(v96%1) ;else local v97=0;local v98;while true do if (v97==0) then v98=2^(v77-(4 -3)) ;return (((v76%(v98 + v98))>=v98) and 1) or 0 ;end end end end v33=nil;function v33()local v79=0;local v80;while true do if (0==v79) then v80=v9(v27,v30,v30);v30=v30 + (2 -1) ;v79=1;end if (v79==1) then return v80;end end end v34=nil;v29=2;end end end vv17(),...);
