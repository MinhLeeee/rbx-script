local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (0==v29) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\24\14","\224\54\32\169\135"),function(v43)if (v9(v43,2)==79) then local v104=0;while true do if (0==v104) then v31=v8(v11(v43,1,1));return "";end end else local v105=0;local v106;while true do if (v105==0) then v106=v10(v8(v43,16));if v31 then local v124=0;local v125;while true do if (v124==0) then v125=v13(v106,v31);v31=nil;v124=1;end if (v124==1) then return v125;end end else return v106;end break;end end end end);v29=1;end if (v29==1) then v32=nil;function v32(v44,v45,v46)if v46 then local v107=0;local v108;while true do if (0==v107) then v108=(v44/((5 -3)^(v45-1)))%(2^(((v46-1) -(v45-1)) + 1)) ;return v108-(v108%1) ;end end else local v109=0;local v110;while true do if (v109==0) then v110=2^(v45-1) ;return (((v44%(v110 + v110))>=v110) and 1) or 0 ;end end end end v33=nil;v29=2;end if (v29==3) then v35=nil;function v35()local v47=0;local v48;local v49;local v50;local v51;while true do if (v47==1) then return (v51 * 16777216) + (v50 * (187552 -122016)) + (v49 * 256) + v48 ;end if (v47==0) then v48,v49,v50,v51=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v47=1;end end end v36=nil;v29=4;end if (v29==4) then function v36()local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v52==1) then v55=1;v56=(v32(v54,1,20) * (2^(61 -29))) + v53 ;v52=2;end if (2==v52) then v57=v32(v54,21,31);v58=((v32(v54,82 -50 )==1) and  -(620 -(555 + 64))) or 1 ;v52=3;end if (v52==0) then v53=v35();v54=v35();v52=1;end if (3==v52) then if (v57==0) then if (v56==(931 -(857 + 74))) then return v58 * 0 ;else v57=1;v55=0;end elseif (v57==2047) then return ((v56==(568 -(367 + 201))) and (v58 * (1/(927 -(214 + 713))))) or (v58 * NaN) ;end return v16(v58,v57-1023 ) * (v55 + (v56/(2^52))) ;end end end v37=nil;function v37(v59)local v60;if  not v59 then local v111=0;while true do if (v111==0) then v59=v35();if (v59==0) then return "";end break;end end end v60=v11(v27,v30,(v30 + v59) -(1 + 0) );v30=v30 + v59 ;local v61={};for v79=1 + 0 , #v60 do v61[v79]=v10(v9(v11(v60,v79,v79)));end return v14(v61);end v29=5;end if (v29==2) then function v33()local v62=v9(v27,v30,v30);v30=v30 + 1 ;return v62;end v34=nil;function v34()local v63=0;local v64;local v65;while true do if (v63==0) then v64,v65=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v63=1;end if (v63==1) then return (v65 * 256) + v64 ;end end end v29=3;end if (7==v29) then function v41(v66,v67,v68)local v69=v66[4 -3 ];local v70=v66[119 -(32 + 85) ];local v71=v66[3];return function(...)local v81=v69;local v82=v70;local v83=v71;local v84=v39;local v85=1;local v86= -1;local v87={};local v88={...};local v89=v20("#",...) -(1 + 0) ;local v90={};local v91={};for v112=0,v89 do if (v112>=v83) then v87[v112-v83 ]=v88[v112 + 1 ];else v91[v112]=v88[v112 + 1 ];end end local v92=(v89-v83) + 1 ;local v93;local v94;while true do v93=v81[v85];v94=v93[1];if (v94<=44) then if (v94<=21) then if (v94<=10) then if (v94<=(1 + 3)) then if (v94<=1) then if (v94==0) then local v136=v93[2];local v137=v91[v93[3]];v91[v136 + 1 ]=v137;v91[v136]=v137[v93[961 -(892 + 65) ]];else v91[v93[2]]=v93[3];end elseif (v94<=2) then local v143=0;local v144;while true do if (v143==0) then v144=v93[2];do return v21(v91,v144,v86);end break;end end elseif (v94==3) then v91[v93[2]]=v93[3] + v91[v93[4]] ;else local v249=0;local v250;local v251;local v252;local v253;while true do if (v249==1) then v86=(v252 + v250) -1 ;v253=0;v249=2;end if (v249==0) then v250=v93[2];v251,v252=v84(v91[v250](v91[v250 + 1 ]));v249=1;end if (v249==2) then for v443=v250,v86 do v253=v253 + 1 ;v91[v443]=v251[v253];end break;end end end elseif (v94<=7) then if (v94<=5) then local v145=0;local v146;local v147;local v148;while true do if (v145==2) then if (v147>0) then if (v148<=v91[v146 + 1 ]) then local v458=0;while true do if (v458==0) then v85=v93[3];v91[v146 + 3 ]=v148;break;end end end elseif (v148>=v91[v146 + 1 ]) then local v459=0;while true do if (v459==0) then v85=v93[3];v91[v146 + (5 -2) ]=v148;break;end end end break;end if (v145==1) then v148=v91[v146] + v147 ;v91[v146]=v148;v145=2;end if (v145==0) then v146=v93[4 -2 ];v147=v91[v146 + 2 ];v145=1;end end elseif (v94==6) then local v254=v93[3];local v255=v91[v254];for v355=v254 + 1 ,v93[4] do v255=v255   .. v91[v355] ;end v91[v93[2]]=v255;else v91[v93[2]]=v91[v93[3]] + v93[4] ;end elseif (v94<=8) then local v149=0;local v150;while true do if (v149==0) then v150=v93[2];v91[v150]=v91[v150](v21(v91,v150 + (1 -0) ,v93[3]));break;end end elseif (v94>9) then local v258=0;local v259;local v260;local v261;while true do if (v258==1) then v261=0;for v446=v259,v93[354 -(87 + 263) ] do v261=v261 + 1 ;v91[v446]=v260[v261];end break;end if (v258==0) then v259=v93[2];v260={v91[v259](v21(v91,v259 + 1 ,v86))};v258=1;end end elseif  not v91[v93[2]] then v85=v85 + (181 -(67 + 113)) ;else v85=v93[3];end elseif (v94<=15) then if (v94<=12) then if (v94==11) then local v151=0;local v152;local v153;local v154;while true do if (v151==1) then v154=v93[3];for v393=1,v154 do v153[v393]=v91[v152 + v393 ];end break;end if (v151==0) then v152=v93[2];v153=v91[v152];v151=1;end end else local v155=0;local v156;local v157;while true do if (1==v155) then for v396=v156 + 1 ,v93[4] do v157=v157   .. v91[v396] ;end v91[v93[2]]=v157;break;end if (0==v155) then v156=v93[3];v157=v91[v156];v155=1;end end end elseif (v94<=13) then v91[v93[2]][v93[3]]=v93[4];elseif (v94>(11 + 3)) then if (v91[v93[2]]==v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end else v91[v93[2]]=v91[v93[3]]%v91[v93[4]] ;end elseif (v94<=(44 -26)) then if (v94<=16) then v91[v93[2]]=v67[v93[3]];elseif (v94==17) then v91[v93[2]]=v93[3];else v91[v93[2]]= #v91[v93[3]];end elseif (v94<=19) then local v162=v93[2];v91[v162](v91[v162 + 1 ]);elseif (v94>20) then local v266=0;local v267;while true do if (v266==0) then v267=v93[2];do return v21(v91,v267,v86);end break;end end else local v268=v93[2];local v269=v91[v268];local v270=v93[3];for v364=1,v270 do v269[v364]=v91[v268 + v364 ];end end elseif (v94<=32) then if (v94<=26) then if (v94<=23) then if (v94>(17 + 5)) then local v163=0;local v164;local v165;while true do if (v163==0) then v164=v93[2];v165=v91[v164];v163=1;end if (v163==1) then for v398=v164 + 1 ,v86 do v15(v165,v91[v398]);end break;end end else local v166=v82[v93[3]];local v167;local v168={};v167=v18({},{[v7("\242\247\194\121\254\200\208","\154\173\168\171\23")]=function(v218,v219)local v220=0;local v221;while true do if (v220==0) then v221=v168[v219];return v221[1][v221[2]];end end end,[v7("\194\12\209\130\67\244\61\219\130\76","\52\157\83\191\231")]=function(v222,v223,v224)local v225=v168[v223];v225[1][v225[2]]=v224;end});for v227=1,v93[15 -11 ] do local v228=0;local v229;while true do if (v228==1) then if (v229[1]==51) then v168[v227-1 ]={v91,v229[3]};else v168[v227-1 ]={v67,v229[3]};end v90[ #v90 + 1 ]=v168;break;end if (v228==0) then v85=v85 + 1 ;v229=v81[v85];v228=1;end end end v91[v93[2]]=v41(v166,v167,v68);end elseif (v94<=(976 -(802 + 150))) then local v170=v93[5 -3 ];local v171,v172=v84(v91[v170](v21(v91,v170 + 1 ,v86)));v86=(v172 + v170) -1 ;local v173=0;for v230=v170,v86 do local v231=0;while true do if (v231==0) then v173=v173 + 1 ;v91[v230]=v171[v173];break;end end end elseif (v94>25) then v91[v93[2]][v91[v93[3]]]=v91[v93[4]];else v91[v93[3 -1 ]]=v91[v93[3]]%v93[4] ;end elseif (v94<=(22 + 7)) then if (v94<=27) then if (v91[v93[2]]==v93[4]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94>28) then v91[v93[2]]=v91[v93[3]] + v93[4] ;else do return;end end elseif (v94<=30) then local v174=v93[2];v91[v174]=v91[v174](v91[v174 + 1 ]);elseif (v94>(1028 -(915 + 82))) then v85=v93[3];else v91[v93[2]]=v67[v93[3]];end elseif (v94<=38) then if (v94<=35) then if (v94<=33) then local v176=0;local v177;local v178;local v179;local v180;while true do if (v176==2) then for v404=v177,v86 do local v405=0;while true do if (0==v405) then v180=v180 + 1 ;v91[v404]=v178[v180];break;end end end break;end if (v176==0) then v177=v93[2];v178,v179=v84(v91[v177](v21(v91,v177 + (2 -1) ,v93[3])));v176=1;end if (v176==1) then v86=(v179 + v177) -1 ;v180=0;v176=2;end end elseif (v94>34) then if v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end else v91[v93[2]]={};end elseif (v94<=36) then v85=v93[3];elseif (v94==37) then if  not v91[v93[2]] then v85=v85 + 1 ;else v85=v93[2 + 1 ];end else v91[v93[2]]=v68[v93[3]];end elseif (v94<=41) then if (v94<=39) then if (v91[v93[2]]==v93[4]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94==40) then v91[v93[2]][v91[v93[3]]]=v91[v93[4]];else local v285=v93[2 -0 ];do return v91[v285](v21(v91,v285 + 1 ,v93[3]));end end elseif (v94<=42) then local v182=v82[v93[3]];local v183;local v184={};v183=v18({},{[v7("\202\146\44\35\236\116\237","\17\149\205\69\77\136")]=function(v232,v233)local v234=0;local v235;while true do if (v234==0) then v235=v184[v233];return v235[1][v235[2]];end end end,[v7("\152\248\245\82\101\219\142\163\194\227","\224\199\167\155\55\18\178")]=function(v236,v237,v238)local v239=v184[v237];v239[1][v239[2]]=v238;end});for v241=1,v93[4] do local v242=0;local v243;while true do if (v242==1) then if (v243[1]==51) then v184[v241-1 ]={v91,v243[3]};else v184[v241-1 ]={v67,v243[3]};end v90[ #v90 + 1 ]=v184;break;end if (v242==0) then v85=v85 + 1 ;v243=v81[v85];v242=1;end end end v91[v93[2]]=v41(v182,v183,v68);elseif (v94==43) then do return v91[v93[2]]();end else for v370=v93[2],v93[3] do v91[v370]=nil;end end elseif (v94<=(151 -84)) then if (v94<=55) then if (v94<=49) then if (v94<=46) then if (v94>45) then local v186=v93[2];v91[v186]=v91[v186](v91[v186 + 1 ]);else local v188=0;local v189;while true do if (v188==0) then v189=v93[2];v91[v189]=v91[v189]();break;end end end elseif (v94<=47) then local v190=0;local v191;while true do if (v190==0) then v191=v93[2];do return v91[v191](v21(v91,v191 + 1 ,v93[3]));end break;end end elseif (v94>48) then local v286=0;local v287;local v288;local v289;while true do if (v286==1) then v289=v91[v287 + 2 ];if (v289>0) then if (v288>v91[v287 + 1 ]) then v85=v93[3];else v91[v287 + 3 ]=v288;end elseif (v288<v91[v287 + 1 ]) then v85=v93[6 -3 ];else v91[v287 + 3 ]=v288;end break;end if (v286==0) then v287=v93[2];v288=v91[v287];v286=1;end end elseif (v91[v93[2]]==v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=52) then if (v94<=50) then local v192=0;local v193;local v194;while true do if (1==v192) then for v412=v193 + 1 ,v93[3] do v15(v194,v91[v412]);end break;end if (v192==0) then v193=v93[1 + 1 ];v194=v91[v193];v192=1;end end elseif (v94==51) then v91[v93[2]]=v91[v93[3]];elseif v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=53) then v91[v93[2]]=v91[v93[3]][v93[4]];elseif (v94>(95 -41)) then local v292=0;local v293;local v294;local v295;local v296;while true do if (v292==0) then v293=v93[2];v294,v295=v84(v91[v293](v21(v91,v293 + 1 ,v86)));v292=1;end if (v292==1) then v86=(v295 + v293) -1 ;v296=0;v292=2;end if (v292==2) then for v453=v293,v86 do v296=v296 + 1 ;v91[v453]=v294[v296];end break;end end else local v297=0;local v298;local v299;local v300;while true do if (v297==2) then if (v299>0) then if (v300<=v91[v298 + 1 ]) then local v470=0;while true do if (0==v470) then v85=v93[3];v91[v298 + 3 ]=v300;break;end end end elseif (v300>=v91[v298 + 1 ]) then local v471=0;while true do if (v471==0) then v85=v93[3];v91[v298 + 3 ]=v300;break;end end end break;end if (v297==1) then v300=v91[v298] + v299 ;v91[v298]=v300;v297=2;end if (v297==0) then v298=v93[2 + 0 ];v299=v91[v298 + 2 ];v297=1;end end end elseif (v94<=61) then if (v94<=58) then if (v94<=(847 -(368 + 423))) then if (v93[2]==v91[v93[12 -8 ]]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94>57) then do return v91[v93[2]]();end else local v302=0;local v303;local v304;local v305;local v306;while true do if (1==v302) then v86=(v305 + v303) -1 ;v306=0;v302=2;end if (v302==2) then for v456=v303,v86 do local v457=0;while true do if (0==v457) then v306=v306 + 1 ;v91[v456]=v304[v306];break;end end end break;end if (v302==0) then v303=v93[2];v304,v305=v84(v91[v303](v91[v303 + 1 ]));v302=1;end end end elseif (v94<=59) then v91[v93[2]]={};elseif (v94>60) then local v307=v93[2];v91[v307](v21(v91,v307 + 1 ,v93[3]));else v91[v93[2]]=v91[v93[21 -(10 + 8) ]];end elseif (v94<=64) then if (v94<=62) then v91[v93[2]][v93[3]]=v93[4];elseif (v94==63) then local v310=0;local v311;while true do if (0==v310) then v311=v93[2];v91[v311](v91[v311 + 1 ]);break;end end else v91[v93[2]]=v68[v93[3]];end elseif (v94<=(249 -184)) then v91[v93[2]]=v91[v93[3]]%v93[4] ;elseif (v94==66) then local v314=v93[444 -(416 + 26) ];local v315=v93[4];local v316=v314 + 2 ;local v317={v91[v314](v91[v314 + 1 ],v91[v316])};for v377=1,v315 do v91[v316 + v377 ]=v317[v377];end local v318=v317[3 -2 ];if v318 then local v414=0;while true do if (v414==0) then v91[v316]=v318;v85=v93[3];break;end end else v85=v85 + 1 ;end else v91[v93[2]]=v91[v93[2 + 1 ]][v93[4]];end elseif (v94<=(137 -59)) then if (v94<=72) then if (v94<=69) then if (v94==68) then local v201=v93[2];local v202,v203=v84(v91[v201](v21(v91,v201 + 1 ,v93[3])));v86=(v203 + v201) -1 ;local v204=0;for v244=v201,v86 do v204=v204 + 1 ;v91[v244]=v202[v204];end elseif (v93[2]==v91[v93[442 -(145 + 293) ]]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=70) then v91[v93[2]][v91[v93[433 -(44 + 386) ]]]=v93[4];elseif (v94==71) then v91[v93[2]][v91[v93[3]]]=v93[4];else local v324=v93[2];local v325=v93[4];local v326=v324 + 2 ;local v327={v91[v324](v91[v324 + 1 ],v91[v326])};for v380=1,v325 do v91[v326 + v380 ]=v327[v380];end local v328=v327[1];if v328 then local v415=0;while true do if (0==v415) then v91[v326]=v328;v85=v93[3];break;end end else v85=v85 + (1487 -(998 + 488)) ;end end elseif (v94<=75) then if (v94<=73) then local v207=0;local v208;local v209;while true do if (1==v207) then for v416=v208 + 1 + 0 ,v86 do v15(v209,v91[v416]);end break;end if (v207==0) then v208=v93[2];v209=v91[v208];v207=1;end end elseif (v94==74) then local v329=0;local v330;while true do if (v329==0) then v330=v93[2];v91[v330]=v91[v330]();break;end end else local v331=v93[2];v91[v331]=v91[v331](v21(v91,v331 + 1 ,v86));end elseif (v94<=(63 + 13)) then v91[v93[774 -(201 + 571) ]]= #v91[v93[3]];elseif (v94>(1215 -(116 + 1022))) then local v333=v93[2];local v334={v91[v333](v21(v91,v333 + 1 ,v86))};local v335=0;for v385=v333,v93[4] do v335=v335 + 1 ;v91[v385]=v334[v335];end else local v336=0;local v337;while true do if (v336==0) then v337=v93[2];v91[v337]=v91[v337](v21(v91,v337 + 1 ,v86));break;end end end elseif (v94<=84) then if (v94<=(337 -256)) then if (v94<=79) then v91[v93[2]][v93[3]]=v91[v93[4]];elseif (v94>80) then do return;end else for v388=v93[2],v93[3] do v91[v388]=nil;end end elseif (v94<=82) then v91[v93[2 + 0 ]]=v93[10 -7 ] + v91[v93[4]] ;elseif (v94>83) then local v338=0;local v339;while true do if (v338==0) then v339=v93[2];v91[v339](v21(v91,v339 + 1 ,v86));break;end end else local v340=v93[2];v91[v340](v21(v91,v340 + 1 ,v86));end elseif (v94<=87) then if (v94<=85) then v91[v93[2]][v93[3]]=v91[v93[4]];elseif (v94==86) then local v341=0;local v342;local v343;while true do if (v341==1) then v91[v342 + 1 ]=v343;v91[v342]=v343[v93[4]];break;end if (v341==0) then v342=v93[2];v343=v91[v93[3]];v341=1;end end else v91[v93[2]]=v91[v93[3]]%v91[v93[4]] ;end elseif (v94<=88) then local v216=v93[2];v91[v216]=v91[v216](v21(v91,v216 + (3 -2) ,v93[862 -(814 + 45) ]));elseif (v94>89) then local v345=0;local v346;while true do if (v345==0) then v346=v93[2];v91[v346](v21(v91,v346 + 1 ,v93[3]));break;end end else local v347=0;local v348;local v349;local v350;while true do if (v347==1) then v350=v91[v348 + 2 ];if (v350>0) then if (v349>v91[v348 + 1 ]) then v85=v93[3];else v91[v348 + 3 ]=v349;end elseif (v349<v91[v348 + 1 ]) then v85=v93[7 -4 ];else v91[v348 + 3 ]=v349;end break;end if (v347==0) then v348=v93[2];v349=v91[v348];v347=1;end end end v85=v85 + 1 ;end end;end return v41(v40(),{},v28)(...);end if (v29==5) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (v29==6) then v40=nil;function v40()local v72={};local v73={};local v74={};local v75={v72,v73,nil,v74};local v76=v35();local v77={};for v95=1,v76 do local v96=0;local v97;local v98;while true do if (v96==0) then v97=v33();v98=nil;v96=1;end if (v96==1) then if (v97==1) then v98=v33()~=0 ;elseif (v97==2) then v98=v36();elseif (v97==3) then v98=v37();end v77[v95]=v98;break;end end end v75[3]=v33();for v99=1,v35() do local v100=0;local v101;while true do if (v100==0) then v101=v33();if (v32(v101,1,1)==0) then local v120=0;local v121;local v122;local v123;while true do if (v120==2) then if (v32(v122,1 -0 ,1)==(1066 -(68 + 997))) then v123[2]=v77[v123[2]];end if (v32(v122,2,2)==1) then v123[3]=v77[v123[1273 -(226 + 1044) ]];end v120=3;end if (v120==1) then v123={v34(),v34(),nil,nil};if (v121==0) then v123[3]=v34();v123[4]=v34();elseif (v121==1) then v123[1640 -(1523 + 114) ]=v35();elseif (v121==2) then v123[3]=v35() -(2^16) ;elseif (v121==3) then v123[3]=v35() -((2 + 0)^16) ;v123[4]=v34();end v120=2;end if (0==v120) then v121=v32(v101,2,3);v122=v32(v101,4,6);v120=1;end if (v120==3) then if (v32(v122,3,3)==1) then v123[4]=v77[v123[4]];end v72[v99]=v123;break;end end end break;end end end for v102=1,v35() do v73[v102-1 ]=v40();end return v75;end v41=nil;v29=7;end end end vv17(),...);
