local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\137\138","\100\167\164\62\87\59"),function(v42)if (v9(v42,2)==79) then v30=v8(v11(v42,1,1));return "";else local v88=v10(v8(v42,16));if v30 then local v99=v13(v88,v30);v30=nil;return v99;else return v88;end end end);local function v31(v43,v44,v45)if v45 then local v89=0;local v90;while true do if (0==v89) then v90=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-(2 -1))) + 1)) ;return v90-(v90%1) ;end end else local v91=2^(v44-1) ;return (((v43%(v91 + v91))>=v91) and (1 -0)) or 0 ;end end local function v32()local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33()local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + (4 -2) ;return (v49 * (875 -(555 + 64))) + v48 ;end local function v34()local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end if (0==v50) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end end end local function v35()local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==2) then v60=v31(v57,21,31);v61=((v31(v57,32)==1) and  -1) or 1 ;v55=3;end if (v55==1) then v58=1;v59=(v31(v57,1,20) * (2^32)) + v56 ;v55=2;end if (v55==0) then v56=v34();v57=v34();v55=1;end if (v55==3) then if (v60==(931 -(857 + 74))) then if (v59==0) then return v61 * 0 ;else local v128=0;while true do if (v128==0) then v60=1;v58=0;break;end end end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end end end local function v36(v62)local v63=0;local v64;local v65;while true do if (v63==1) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end if (v63==2) then v65={};for v100=1, #v64 do v65[v100]=v10(v9(v11(v64,v100,v100)));end v63=3;end if (0==v63) then v64=nil;if  not v62 then local v117=0;while true do if (v117==0) then v62=v34();if (v62==0) then return "";end break;end end end v63=1;end if (v63==3) then return v14(v65);end end end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v80=1,v70 do local v81=0;local v82;local v83;while true do if (0==v81) then v82=v32();v83=nil;v81=1;end if (v81==1) then if (v82==1) then v83=v32()~=0 ;elseif (v82==2) then v83=v35();elseif (v82==3) then v83=v36();end v71[v80]=v83;break;end end end v69[3]=v32();for v84=1,v34() do local v85=v32();if (v31(v85,1,1)==0) then local v92=v31(v85,929 -(214 + 713) ,3);local v93=v31(v85,4,6);local v94={v33(),v33(),nil,nil};if (v92==0) then local v118=0;while true do if (v118==0) then v94[3]=v33();v94[1 + 3 ]=v33();break;end end elseif (v92==1) then v94[3]=v34();elseif (v92==2) then v94[3]=v34() -((879 -(282 + 595))^(1653 -(1523 + 114))) ;elseif (v92==3) then v94[3]=v34() -(2^(15 + 1)) ;v94[5 -1 ]=v33();end if (v31(v93,1,1)==1) then v94[1067 -(68 + 997) ]=v71[v94[2]];end if (v31(v93,2,1272 -(226 + 1044) )==1) then v94[3]=v71[v94[3]];end if (v31(v93,3,3)==1) then v94[4]=v71[v94[4]];end v66[v84]=v94;end end for v86=1,v34() do v67[v86-1 ]=v39();end return v69;end local function v40(v73,v74,v75)local v76=0;local v77;local v78;local v79;while true do if (v76==1) then v79=v73[3];return function(...)local v103=v77;local v104=v78;local v105=v79;local v106=v38;local v107=1;local v108= -1;local v109={};local v110={...};local v111=v20("#",...) -1 ;local v112={};local v113={};for v125=0,v111 do if (v125>=v105) then v109[v125-v105 ]=v110[v125 + 1 ];else v113[v125]=v110[v125 + (118 -(32 + 85)) ];end end local v114=(v111-v105) + 1 ;local v115;local v116;while true do v115=v103[v107];v116=v115[1];if (v116<=44) then if (v116<=(21 + 0)) then if (v116<=10) then if (v116<=4) then if (v116<=1) then if (v116==0) then local v139=0;local v140;while true do if (v139==0) then v140=v115[1 + 1 ];v113[v140]=v113[v140]();break;end end else v113[v115[959 -(892 + 65) ]][v113[v115[3]]]=v113[v115[9 -5 ]];end elseif (v116<=2) then local v143=0;local v144;while true do if (0==v143) then v144=v115[2];v113[v144](v21(v113,v144 + 1 ,v115[3]));break;end end elseif (v116>3) then do return v113[v115[2]]();end else local v219=v115[2];local v220,v221=v106(v113[v219](v21(v113,v219 + 1 ,v115[3])));v108=(v221 + v219) -1 ;local v222=0;for v339=v219,v108 do local v340=0;while true do if (v340==0) then v222=v222 + 1 ;v113[v339]=v220[v222];break;end end end end elseif (v116<=7) then if (v116<=5) then local v145=0;local v146;while true do if (v145==0) then v146=v115[2];do return v113[v146](v21(v113,v146 + 1 ,v115[5 -2 ]));end break;end end elseif (v116>6) then v113[v115[2]][v113[v115[3]]]=v113[v115[4]];else local v225=v115[3 -1 ];local v226,v227=v106(v113[v225](v113[v225 + 1 ]));v108=(v227 + v225) -(351 -(87 + 263)) ;local v228=0;for v342=v225,v108 do v228=v228 + (181 -(67 + 113)) ;v113[v342]=v226[v228];end end elseif (v116<=8) then v113[v115[2]][v115[3]]=v113[v115[4]];elseif (v116==(7 + 2)) then v113[v115[2]][v115[3]]=v113[v115[4]];else local v231=0;local v232;while true do if (v231==0) then v232=v115[2];v113[v232](v21(v113,v232 + 1 ,v108));break;end end end elseif (v116<=15) then if (v116<=12) then if (v116>11) then v113[v115[2]]=v113[v115[3]] + v115[4] ;else do return;end end elseif (v116<=13) then v113[v115[2]]=v113[v115[3]][v115[4]];elseif (v116==14) then v113[v115[2]][v113[v115[3]]]=v115[4];else local v235=v115[2];local v236=v113[v115[3]];v113[v235 + 1 ]=v236;v113[v235]=v236[v115[9 -5 ]];end elseif (v116<=18) then if (v116<=16) then if v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3 + 0 ];end elseif (v116>17) then local v241=0;local v242;local v243;local v244;while true do if (v241==0) then v242=v115[2];v243=v113[v242];v241=1;end if (v241==1) then v244=v115[11 -8 ];for v435=1,v244 do v243[v435]=v113[v242 + v435 ];end break;end end else v113[v115[2]]=v74[v115[3]];end elseif (v116<=19) then if  not v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116>20) then local v248=0;local v249;while true do if (0==v248) then v249=v115[2];v113[v249]=v113[v249]();break;end end else local v250=0;local v251;while true do if (v250==0) then v251=v115[954 -(802 + 150) ];v113[v251]=v113[v251](v113[v251 + 1 ]);break;end end end elseif (v116<=32) then if (v116<=26) then if (v116<=23) then if (v116>22) then local v152=v115[5 -3 ];v113[v152]=v113[v152](v21(v113,v152 + (1 -0) ,v115[3 + 0 ]));else local v154=0;local v155;while true do if (v154==0) then v155=v115[999 -(915 + 82) ];v113[v155](v21(v113,v155 + 1 ,v108));break;end end end elseif (v116<=24) then v113[v115[2]]=v113[v115[3]]%v115[4] ;elseif (v116==(70 -45)) then v113[v115[2]]={};else local v253=0;local v254;while true do if (0==v253) then v254=v115[2];do return v113[v254](v21(v113,v254 + 1 ,v115[3]));end break;end end end elseif (v116<=29) then if (v116<=27) then local v157=v115[2];v113[v157]=v113[v157](v21(v113,v157 + 1 ,v115[3]));elseif (v116==28) then if (v115[2]==v113[v115[3 + 1 ]]) then v107=v107 + 1 ;else v107=v115[3];end else local v255=0;local v256;while true do if (v255==0) then v256=v115[2];v113[v256](v113[v256 + 1 ]);break;end end end elseif (v116<=30) then local v159=0;local v160;local v161;local v162;while true do if (v159==0) then v160=v115[2 -0 ];v161=v113[v160];v159=1;end if (v159==1) then v162=v115[3];for v373=1,v162 do v161[v373]=v113[v160 + v373 ];end break;end end elseif (v116>31) then local v257=0;local v258;local v259;local v260;while true do if (v257==0) then v258=v115[1189 -(1069 + 118) ];v259={v113[v258](v21(v113,v258 + 1 ,v108))};v257=1;end if (1==v257) then v260=0;for v438=v258,v115[4] do v260=v260 + (2 -1) ;v113[v438]=v259[v260];end break;end end else v113[v115[2]]=v113[v115[3]][v115[4]];end elseif (v116<=38) then if (v116<=(76 -41)) then if (v116<=33) then if (v115[2]==v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116>34) then do return;end else local v264=0;local v265;local v266;local v267;local v268;while true do if (v264==2) then for v441=v265,v108 do local v442=0;while true do if (v442==0) then v268=v268 + 1 ;v113[v441]=v266[v268];break;end end end break;end if (v264==0) then v265=v115[1 + 1 ];v266,v267=v106(v113[v265](v21(v113,v265 + 1 ,v108)));v264=1;end if (v264==1) then v108=(v267 + v265) -1 ;v268=0;v264=2;end end end elseif (v116<=36) then if (v113[v115[2]]==v113[v115[6 -2 ]]) then v107=v107 + 1 ;else v107=v115[3 + 0 ];end elseif (v116>37) then local v270=v115[2];local v271=v115[795 -(368 + 423) ];local v272=v270 + 2 ;local v273={v113[v270](v113[v270 + 1 ],v113[v272])};for v349=1,v271 do v113[v272 + v349 ]=v273[v349];end local v274=v273[1];if v274 then v113[v272]=v274;v107=v115[3];else v107=v107 + 1 ;end else v113[v115[2]][v113[v115[3]]]=v115[12 -8 ];end elseif (v116<=(59 -(10 + 8))) then if (v116<=39) then local v163=0;local v164;local v165;while true do if (v163==0) then v164=v115[2];v165=v113[v164];v163=1;end if (v163==1) then for v378=v164 + 1 ,v108 do v15(v165,v113[v378]);end break;end end elseif (v116>40) then local v277=0;local v278;while true do if (v277==0) then v278=v115[7 -5 ];v113[v278]=v113[v278](v21(v113,v278 + 1 ,v108));break;end end else local v279=0;local v280;while true do if (v279==0) then v280=v115[2];v113[v280]=v113[v280](v21(v113,v280 + 1 ,v108));break;end end end elseif (v116<=42) then v113[v115[2]]={};elseif (v116==43) then v113[v115[2]]=v115[3] + v113[v115[4]] ;else v107=v115[3];end elseif (v116<=67) then if (v116<=(497 -(416 + 26))) then if (v116<=(156 -107)) then if (v116<=46) then if (v116==45) then local v167=0;local v168;local v169;while true do if (0==v167) then v168=v115[2];v169=v113[v168];v167=1;end if (v167==1) then for v379=v168 + 1 + 0 ,v108 do v15(v169,v113[v379]);end break;end end else local v170=0;local v171;local v172;while true do if (v170==1) then for v380=v171 + 1 ,v115[4] do v172=v172   .. v113[v380] ;end v113[v115[2]]=v172;break;end if (v170==0) then v171=v115[3];v172=v113[v171];v170=1;end end end elseif (v116<=47) then local v173=v115[2];local v174={v113[v173](v21(v113,v173 + 1 ,v108))};local v175=0;for v209=v173,v115[4] do v175=v175 + 1 ;v113[v209]=v174[v175];end elseif (v116>48) then v113[v115[2]][v115[3]]=v115[4];else v113[v115[2]]= #v113[v115[4 -1 ]];end elseif (v116<=52) then if (v116<=50) then if v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116==51) then v113[v115[2]]=v75[v115[3]];else local v289=v115[440 -(145 + 293) ];local v290,v291=v106(v113[v289](v21(v113,v289 + 1 ,v108)));v108=(v291 + v289) -1 ;local v292=0;for v359=v289,v108 do local v360=0;while true do if (v360==0) then v292=v292 + 1 ;v113[v359]=v290[v292];break;end end end end elseif (v116<=53) then v113[v115[2]]=v113[v115[3]] + v115[4] ;elseif (v116==54) then do return v113[v115[2]]();end else v113[v115[2]]=v113[v115[3]];end elseif (v116<=61) then if (v116<=58) then if (v116<=56) then local v177=v115[2];local v178=v113[v177 + 2 ];local v179=v113[v177] + v178 ;v113[v177]=v179;if (v178>0) then if (v179<=v113[v177 + 1 ]) then v107=v115[3];v113[v177 + 3 ]=v179;end elseif (v179>=v113[v177 + 1 ]) then v107=v115[3];v113[v177 + 3 ]=v179;end elseif (v116>57) then local v295=v115[2];local v296,v297=v106(v113[v295](v21(v113,v295 + 1 ,v115[3])));v108=(v297 + v295) -1 ;local v298=0;for v361=v295,v108 do v298=v298 + 1 ;v113[v361]=v296[v298];end else local v299=0;local v300;while true do if (v299==0) then v300=v115[432 -(44 + 386) ];do return v21(v113,v300,v108);end break;end end end elseif (v116<=59) then v113[v115[2]]=v113[v115[3]];elseif (v116==60) then if (v113[v115[1488 -(998 + 488) ]]==v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[3];end else v113[v115[2]]=v74[v115[3]];end elseif (v116<=64) then if (v116<=62) then local v183=0;local v184;local v185;local v186;while true do if (0==v183) then v184=v104[v115[3]];v185=nil;v183=1;end if (v183==1) then v186={};v185=v18({},{[v7("\191\105\73\199\227\7\49","\73\224\54\32\169\135\98")]=function(v386,v387)local v388=v186[v387];return v388[1][v388[2]];end,[v7("\247\244\121\33\67\244\195\204\206\111","\173\168\171\23\68\52\157")]=function(v389,v390,v391)local v392=0;local v393;while true do if (v392==0) then v393=v186[v390];v393[1][v393[2]]=v391;break;end end end});v183=2;end if (v183==2) then for v394=1,v115[4] do v107=v107 + 1 ;local v395=v103[v107];if (v395[1 + 0 ]==55) then v186[v394-1 ]={v113,v395[3]};else v186[v394-(1 + 0) ]={v74,v395[3]};end v112[ #v112 + 1 ]=v186;end v113[v115[2]]=v40(v184,v185,v75);break;end end elseif (v116>(835 -(201 + 571))) then local v303=0;local v304;local v305;while true do if (v303==1) then v113[v304 + 1 ]=v305;v113[v304]=v305[v115[1142 -(116 + 1022) ]];break;end if (v303==0) then v304=v115[2];v305=v113[v115[3]];v303=1;end end else local v306=v115[2];v113[v306]=v113[v306](v113[v306 + 1 ]);end elseif (v116<=65) then for v212=v115[2],v115[3] do v113[v212]=nil;end elseif (v116==66) then v113[v115[2]]=v113[v115[12 -9 ]]%v113[v115[4]] ;else v113[v115[2]]=v115[3] + v113[v115[4]] ;end elseif (v116<=(46 + 32)) then if (v116<=72) then if (v116<=69) then if (v116==68) then v107=v115[3];else v113[v115[2]]=v115[10 -7 ];end elseif (v116<=70) then local v190=v115[2];local v191=v113[v190 + (7 -5) ];local v192=v113[v190] + v191 ;v113[v190]=v192;if (v191>(859 -(814 + 45))) then if (v192<=v113[v190 + 1 ]) then local v397=0;while true do if (v397==0) then v107=v115[3];v113[v190 + 3 ]=v192;break;end end end elseif (v192>=v113[v190 + 1 ]) then v107=v115[3];v113[v190 + 3 ]=v192;end elseif (v116==71) then local v310=0;local v311;local v312;while true do if (v310==1) then for v447=v311 + 1 ,v115[4] do v312=v312   .. v113[v447] ;end v113[v115[2]]=v312;break;end if (0==v310) then v311=v115[7 -4 ];v312=v113[v311];v310=1;end end else v113[v115[2]]=v113[v115[3]]%v115[4] ;end elseif (v116<=75) then if (v116<=73) then v113[v115[2]]=v75[v115[3]];elseif (v116>74) then local v314=v115[1 + 1 ];local v315=v113[v314];for v366=v314 + 1 ,v115[2 + 1 ] do v15(v315,v113[v366]);end elseif  not v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=(961 -(261 + 624))) then local v196=0;local v197;while true do if (v196==0) then v197=v115[2];v113[v197](v21(v113,v197 + 1 ,v115[3]));break;end end elseif (v116>77) then local v316=0;local v317;local v318;local v319;local v320;while true do if (v316==0) then v317=v115[2];v318,v319=v106(v113[v317](v113[v317 + 1 ]));v316=1;end if (v316==1) then v108=(v319 + v317) -1 ;v320=0;v316=2;end if (2==v316) then for v448=v317,v108 do local v449=0;while true do if (0==v449) then v320=v320 + 1 ;v113[v448]=v318[v320];break;end end end break;end end elseif (v113[v115[2]]==v115[4]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=84) then if (v116<=81) then if (v116<=79) then local v198=v115[2];local v199=v115[4];local v200=v198 + 2 ;local v201={v113[v198](v113[v198 + 1 ],v113[v200])};for v214=1,v199 do v113[v200 + v214 ]=v201[v214];end local v202=v201[1];if v202 then local v321=0;while true do if (0==v321) then v113[v200]=v202;v107=v115[3];break;end end else v107=v107 + 1 ;end elseif (v116==80) then v113[v115[3 -1 ]]= #v113[v115[1083 -(1020 + 60) ]];else local v323=v115[2];v113[v323](v113[v323 + 1 ]);end elseif (v116<=82) then for v217=v115[2],v115[3] do v113[v217]=nil;end elseif (v116>83) then local v324=0;local v325;local v326;local v327;while true do if (v324==1) then v327={};v326=v18({},{[v7("\184\203\120\251\219\130\236","\191\231\148\17\149")]=function(v450,v451)local v452=0;local v453;while true do if (v452==0) then v453=v327[v451];return v453[1424 -(630 + 793) ][v453[2]];end end end,[v7("\18\215\241\133\176\206\245\33\40\240","\69\77\136\159\224\199\167\155")]=function(v454,v455,v456)local v457=v327[v455];v457[1][v457[2]]=v456;end});v324=2;end if (2==v324) then for v459=3 -2 ,v115[18 -14 ] do local v460=0;local v461;while true do if (v460==0) then v107=v107 + 1 ;v461=v103[v107];v460=1;end if (v460==1) then if (v461[1]==55) then v327[v459-(1 + 0) ]={v113,v461[3]};else v327[v459-1 ]={v74,v461[3]};end v112[ #v112 + 1 ]=v327;break;end end end v113[v115[2]]=v40(v325,v326,v75);break;end if (v324==0) then v325=v104[v115[3]];v326=nil;v324=1;end end else v113[v115[2]]=v115[9 -6 ];end elseif (v116<=87) then if (v116<=85) then local v203=0;local v204;local v205;local v206;while true do if (v203==0) then v204=v115[2];v205=v113[v204];v203=1;end if (v203==1) then v206=v113[v204 + 2 ];if (v206>0) then if (v205>v113[v204 + 1 ]) then v107=v115[1750 -(760 + 987) ];else v113[v204 + 3 ]=v205;end elseif (v205<v113[v204 + 1 ]) then v107=v115[1916 -(1789 + 124) ];else v113[v204 + 3 ]=v205;end break;end end elseif (v116>86) then if (v113[v115[2]]==v115[4]) then v107=v107 + 1 ;else v107=v115[3];end else v113[v115[2]]=v113[v115[3]]%v113[v115[4]] ;end elseif (v116<=88) then local v207=0;local v208;while true do if (v207==0) then v208=v115[2];do return v21(v113,v208,v108);end break;end end elseif (v116>89) then v113[v115[2]][v115[3]]=v115[4];else local v333=v115[2];local v334=v113[v333];local v335=v113[v333 + 2 ];if (v335>0) then if (v334>v113[v333 + 1 ]) then v107=v115[3];else v113[v333 + 3 ]=v334;end elseif (v334<v113[v333 + 1 ]) then v107=v115[3];else v113[v333 + (769 -(745 + 21)) ]=v334;end end v107=v107 + 1 + 0 ;end end;end if (v76==0) then v77=v73[1];v78=v73[8 -6 ];v76=1;end end end return v40(v39(),{},v28)(...);end vv17(),...);
